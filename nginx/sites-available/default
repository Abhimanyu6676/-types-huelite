server {
	listen 80 default_server;
	listen [::]:80 default_server;

	#ssl on;
	listen 443 ssl;
    listen [::]:443 ssl;

	server_name huelite.in www.huelite.in;


	ssl_certificate     /etc/nginx/ssl_cert/www_huelite_in_chain.crt;
    ssl_certificate_key /etc/nginx/ssl_cert/server.key;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;


	####### START ##########


  	#ssl_session_cache shared:SSL:50m;
  	#ssl_session_timeout 1d;
  	#ssl_session_tickets off;

	#ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  	#ssl_prefer_server_ciphers on;
  	#ssl_protocols TLSv1.2 TLSv1.3;
  	#ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

  	#resolver 8.8.8.8 8.8.4.4;
  	#ssl_stapling on;
  	#ssl_stapling_verify on;
  	#ssl_trusted_certificate /etc/nginx/ssl_cert/server.pem;

	#add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

	########  END  #########

	location /backend/ {
		proxy_pass http://localhost:4000;
		proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection 'upgrade';
    	proxy_set_header Host $host;
    	proxy_cache_bypass $http_upgrade;
		#proxy_set_header Host $host;
	   	#proxy_set_header X-Real-IP $remote_addr;
		#proxy_ssl_certificate     /etc/nginx/ssl_cert/www_huelite_in_chain.crt;
    	#proxy_ssl_certificate_key /etc/nginx/ssl_cert/server.key;
	}

    root /var/www/html;
	index index.nginx-debian.html;

	location / {
	    try_files $uri $uri/ =404;
    } 



	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
